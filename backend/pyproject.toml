[tool.poetry]
name = "aioptimizer-backend"
version = "1.0.0"
description = "AI Optimizer Backend API"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "backend"}]

[tool.poetry.dependencies]
python = "^3.13"
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.32.0"}
sqlalchemy = "^2.0.0"
alembic = "^1.13.0"
pymysql = "^1.1.0"
cryptography = "^44.0.0"
python-dotenv = "^1.0.0"
pydantic = {extras = ["email"], version = "^2.10.0"}
pydantic-settings = "^2.6.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.9"
redis = "^5.0.0"

[tool.poetry.group.dev.dependencies]
black = "^24.0.0"
isort = "^5.13.0"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
ruff = "^0.8.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.24.0"
pytest-cov = "^6.0.0"
httpx = "^0.27.0"
faker = "^33.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py313']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
pythonpath = "."
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "integration: Integration tests",
    "unit: Unit tests",
]

[tool.ruff]
line-length = 100
target-version = "py313"
